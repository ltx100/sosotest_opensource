# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-04-15 14:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('all_models', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tb0ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='UNTITLED', max_length=100, verbose_name='Log标题')),
                ('errorLogText', models.TextField(db_column='errorLogText', default='', verbose_name='Log的文本')),
                ('logLevel', models.IntegerField(default=10, verbose_name='级别')),
                ('state', models.IntegerField(choices=[(1, '未解决'), (0, '已解决')], default=1, verbose_name='状态 0已解决 1未解决')),
                ('addBy', models.CharField(db_column='addBy', default=None, max_length=25, null=True, verbose_name='添加者登录名')),
                ('modBy', models.CharField(db_column='modBy', default=None, max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '00系统错误日志表',
                'verbose_name_plural': '00系统错误日志表',
                'db_table': 'tb0_error_log',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboBatchTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('businessLine', models.CharField(db_column='businessLine', max_length=200, verbose_name='业务线')),
                ('httpConfKey', models.CharField(db_column='httpConfKey', max_length=20, verbose_name='执行环境的httpConfKey')),
                ('taskLevel', models.IntegerField(db_column='taskLevel', default='9', verbose_name='任务优先级，0高，5中，9低')),
                ('caseLevel', models.IntegerField(db_column='caseLevel', verbose_name='执行任务中case的优先级，0高，5中，9低')),
                ('taskIdList', models.TextField(db_column='taskIdList', verbose_name='本次批量执行哪些任务')),
                ('status', models.IntegerField(db_column='status', verbose_name='执行状态: NOTRUN = 1 RUNNING = 2 DONE = 3 EXCEPTION = 4 CANCELING = 10 CANCELED = 11')),
                ('isSendEmail', models.IntegerField(db_column='isSendEmail', default=0, verbose_name='是否发送邮件[是否发送:是否带附件:PASS是否发送:FAIL是否发送:ERROR是否发送:EXCEPTION是否发送]0的时候不发送，1开头的时候依次往后判断即可后面没有的都是1，例如11标识发送带附件所有情况都发送10标识发送不带附件所有情况都发送100标识发送不带附件成功不发送其他情况发送')),
                ('isCodeRate', models.IntegerField(db_column='isCodeRate', default=0, verbose_name='是否生成代码覆盖率 1生成 0不生成')),
                ('isSaveHistory', models.IntegerField(db_column='isSaveHistory', default=0, verbose_name='是否保存到历史记录 1保存 0不保存')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='测试结果 根据断言结果生成的测试结果 PASS/FAIL/ERROR/EXCEPTION/CANCEL')),
                ('executeMsg', models.TextField(db_column='executeMsg', default='[]', verbose_name='测试过程中产生的信息')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('addBy', models.CharField(db_column='addBy', max_length=25, verbose_name='创建者登录名')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '914DUBBO任务批量执行',
                'verbose_name_plural': '914DUBBO任务批量执行',
                'db_table': 'tb2_dubbo_batch_execute_task',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceId', models.CharField(db_column='interfaceId', max_length=25, unique=True, verbose_name='接口ID，例如DUBBO_INTERFACE_1')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('casedesc', models.TextField(default='', verbose_name='描述')),
                ('caselevel', models.IntegerField(default=5, verbose_name='用例优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('status', models.IntegerField(default=2, verbose_name='用例状态，1新建待审核 2审核通过 3审核未通过')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('varsPre', models.TextField(db_column='varsPre', default='', verbose_name='前置变量')),
                ('dubboSystem', models.CharField(db_column='dubboSystem', max_length=100, verbose_name='dubbo的project名称，比如mls-biz-support')),
                ('dubboService', models.CharField(db_column='dubboService', max_length=200, verbose_name='dubbo的service全路径，比如com.lianjia.mls.business.quality.facade.SharePoolHouseFacade')),
                ('dubboMethod', models.CharField(db_column='dubboMethod', max_length=100, verbose_name='dubbo的service中的具体method')),
                ('dubboParams', models.TextField(verbose_name='Dubbo invoke时请求的参数,多个params中间用半角逗号间隔')),
                ('encoding', models.CharField(db_column='encoding', default='gb18030', max_length=10, verbose_name='dubbo的service中的编码方式')),
                ('timeout', models.IntegerField(default=20, verbose_name='超时时间，单位秒')),
                ('varsPost', models.TextField(db_column='varsPost', verbose_name='后置变量')),
                ('state', models.IntegerField(choices=[(1, '有效'), (0, '无效')], default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboInterfaceAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'db_table': 'tb2_dubbo_interface',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboInterfaceDebug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceId', models.CharField(db_column='interfaceId', max_length=25, verbose_name='接口ID，例如DUBBO_INTERFACE_1')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('casedesc', models.TextField(default='', verbose_name='描述')),
                ('caselevel', models.IntegerField(default=5, verbose_name='用例优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('status', models.IntegerField(default=2, verbose_name='用例状态，1新建待审核 2审核通过 3审核未通过')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('varsPre', models.TextField(db_column='varsPre', default='', verbose_name='前置变量')),
                ('dubboSystem', models.CharField(db_column='dubboSystem', max_length=100, verbose_name='dubbo的project名称，比如mls-biz-support')),
                ('dubboService', models.CharField(db_column='dubboService', max_length=200, verbose_name='dubbo的service全路径，比如com.lianjia.mls.business.quality.facade.SharePoolHouseFacade')),
                ('dubboMethod', models.CharField(db_column='dubboMethod', max_length=100, verbose_name='dubbo的service中的具体method')),
                ('dubboParams', models.TextField(verbose_name='Dubbo invoke时请求的参数,多个params中间用半角逗号间隔')),
                ('encoding', models.CharField(db_column='encoding', default='gb18030', max_length=10, verbose_name='dubbo的service中的编码方式')),
                ('timeout', models.IntegerField(default=20, verbose_name='超时时间，单位秒')),
                ('varsPost', models.TextField(db_column='varsPost', verbose_name='后置变量')),
                ('execStatus', models.IntegerField(db_column='execStatus', default=1, verbose_name='执行状态')),
                ('actualResult', models.TextField(blank=True, db_column='actualResult', default='', verbose_name='实际结果')),
                ('assertResult', models.TextField(blank=True, db_column='assertResult', default='', verbose_name='断言结果')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='执行结果')),
                ('beforeExecuteTakeTime', models.IntegerField(db_column='beforeExecuteTakeTime', default=0, verbose_name='执行前耗时')),
                ('afterExecuteTakeTime', models.IntegerField(db_column='afterExecuteTakeTime', default=0, verbose_name='执行后耗时')),
                ('executeTakeTime', models.IntegerField(db_column='executeTakeTime', default=0, verbose_name='执行耗时')),
                ('totalTakeTime', models.IntegerField(db_column='totalTakeTime', default=0, verbose_name='总耗时')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(choices=[(1, '有效'), (0, '无效')], default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboInterfaceDebugAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('httpConfKey', models.ForeignKey(db_column='httpConfKey', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='all_models.TbConfigHttp', to_field='httpConfKey', verbose_name='执行环境的httpConfKey')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'db_table': 'tb2_dubbo_interface_debug',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboInterfaceExecuteHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interfaceUrl', models.CharField(db_column='interfaceUrl', max_length=200, verbose_name='请求的接口URL')),
                ('requestHost', models.CharField(db_column='requestHost', max_length=200, verbose_name='请求的主机地址，例如HTTP://test.domain.com')),
                ('totalCount', models.IntegerField(db_column='totalCount', verbose_name='共执行次数统计')),
                ('passCount', models.IntegerField(db_column='passCount', verbose_name='通过次数统计')),
                ('failCount', models.IntegerField(db_column='failCount', verbose_name='失败次数统计')),
                ('errorCount', models.IntegerField(db_column='errorCount', verbose_name='错误次数统计')),
                ('exceptionCount', models.IntegerField(db_column='exceptionCount', verbose_name='异常次数统计')),
                ('taskId', models.CharField(db_column='taskId', max_length=25, verbose_name='执行的任务ID')),
                ('title', models.CharField(max_length=100, verbose_name='任务标题')),
                ('taskdesc', models.CharField(max_length=1000, verbose_name='任务描述')),
                ('protocol', models.CharField(max_length=20, verbose_name='任务协议')),
                ('testReportUrl', models.CharField(db_column='testReportUrl', max_length=200, verbose_name='报告路径')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboInterfaceExecuteHistoryAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('execBy', models.ForeignKey(blank=True, db_column='execBy', default='', max_length=30, on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboInterfaceExecuteHistoryExecBy', to='all_models.TbUser', to_field='loginName', verbose_name='执行人登录用户名')),
                ('httpConfKey', models.ForeignKey(db_column='httpConfKey', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='all_models.TbConfigHttp', to_field='httpConfKey', verbose_name='执行环境的httpConfKey')),
            ],
            options={
                'verbose_name': '913DUBBO任务接口执行历史',
                'verbose_name_plural': '913DUBBO任务接口执行历史',
                'db_table': 'tb2_dubbo_interface_execute_history',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboQuickDebug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestAddr', models.CharField(db_column='requestAddr', max_length=200, verbose_name='快速调试的请求地址')),
                ('dubboService', models.CharField(db_column='dubboService', max_length=200, verbose_name='dubbo的service全路径，比如com.lianjia.mls.business.quality.facade.SharePoolHouseFacade')),
                ('dubboMethod', models.CharField(db_column='dubboMethod', max_length=100, verbose_name='dubbo的service中的具体method')),
                ('dubboParams', models.TextField(verbose_name='Dubbo invoke时请求的参数,多个params中间用半角逗号间隔')),
                ('encoding', models.CharField(db_column='encoding', default='gb18030', max_length=10, verbose_name='dubbo的service中的编码方式')),
                ('actualResult', models.TextField(blank=True, db_column='actualResult', default='', verbose_name='实际结果')),
                ('executeTakeTime', models.IntegerField(db_column='executeTakeTime', default=0, verbose_name='执行耗时')),
                ('state', models.IntegerField(choices=[(1, '有效'), (0, '无效')], default=1, verbose_name='状态 0删除 1有效')),
                ('addBy', models.CharField(db_column='addBy', max_length=25, null=True, verbose_name='创建者登录名')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
            ],
            options={
                'db_table': 'tb2_dubbo_quick_debug',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskId', models.CharField(db_column='taskId', max_length=25, unique=True, verbose_name='任务ID')),
                ('title', models.CharField(max_length=100, verbose_name='任务标题')),
                ('taskdesc', models.CharField(max_length=1000, verbose_name='任务描述')),
                ('protocol', models.CharField(default='DUBBO', max_length=20, verbose_name='任务协议')),
                ('businessLineGroup', models.CharField(db_column='businessLineGroup', max_length=1000, verbose_name='任务包含的业务线名称，例如 SFA,服务云')),
                ('modulesGroup', models.CharField(db_column='modulesGroup', max_length=1000, verbose_name='任务包含的模块名称，例如 合同,订单')),
                ('emailList', models.CharField(db_column='emailList', default='', max_length=2000, verbose_name='发送邮件列表，除却执行人execBy以外的其他收件人')),
                ('taskLevel', models.IntegerField(db_column='taskLevel', default=5, verbose_name='优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('highPriorityVARS', models.TextField(db_column='highPriorityVARS', default='', verbose_name='高优先级变量，执行时覆盖同名的变量和全局变量')),
                ('status', models.IntegerField(default=2, verbose_name='状态，1新建待审核 2审核通过 3审核未通过')),
                ('interfaceCount', models.IntegerField(db_column='interfaceCount', verbose_name='任务中的接口数量统计')),
                ('taskInterfaces', models.TextField(db_column='taskInterfaces', verbose_name='任务中的接口列表，多个接口用,间隔，例如 HTTP_INTERFACE_1,HTTP_INTERFACE_2')),
                ('caseCount', models.IntegerField(db_column='caseCount', verbose_name='任务中的用例数量统计')),
                ('taskTestcases', models.TextField(db_column='taskTestcases', verbose_name='任务中的用例列表，多个接口用,间隔，例如 HTTP_TESTCASE_1,HTTP_TESTCASE_2')),
                ('interfaceNum', models.IntegerField(db_column='interfaceNum', verbose_name='任务总的接口数量，包含接口的和用例中的步骤数量')),
                ('isCI', models.IntegerField(db_column='isCI', default=1, verbose_name='是否加入到持续集成  0 不加人  1加入')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTaskAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
            ],
            options={
                'verbose_name': '911DUBBO任务表',
                'verbose_name_plural': '911DUBBO任务表',
                'db_table': 'tb2_dubbo_task',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTaskExecute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskId', models.CharField(db_column='taskId', max_length=100, verbose_name='要执行的任务ID')),
                ('title', models.CharField(max_length=100, verbose_name='任务标题')),
                ('taskdesc', models.CharField(max_length=1000, verbose_name='任务描述')),
                ('protocol', models.CharField(max_length=20, verbose_name='任务协议')),
                ('businessLineGroup', models.CharField(db_column='businessLineGroup', max_length=1000, verbose_name='任务包含的业务线名称，例如 SFA,服务云')),
                ('modulesGroup', models.CharField(db_column='modulesGroup', max_length=1000, verbose_name='任务包含的模块名称，例如 合同,订单')),
                ('taskLevel', models.IntegerField(db_column='taskLevel', default=5, verbose_name='优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('status', models.IntegerField(default=2, verbose_name='状态，1新建待审核 2审核通过 3审核未通过')),
                ('highPriorityVARS', models.TextField(db_column='highPriorityVARS', default='', verbose_name='高优先级变量，执行时覆盖同名的变量和全局变量')),
                ('interfaceCount', models.IntegerField(db_column='interfaceCount', verbose_name='任务中的接口数量统计')),
                ('taskInterfaces', models.TextField(db_column='taskInterfaces', verbose_name='任务中的接口列表，多个接口用,间隔，例如 HTTP_INTERFACE_1,HTTP_INTERFACE_2')),
                ('caseCount', models.IntegerField(db_column='caseCount', verbose_name='任务中的用例数量统计')),
                ('taskTestcases', models.TextField(db_column='taskTestcases', verbose_name='任务中的用例列表，多个接口用,间隔，例如 HTTP_TESTCASE_1,HTTP_TESTCASE_2')),
                ('interfaceNum', models.IntegerField(db_column='interfaceNum', verbose_name='任务总的接口数量，包含接口的和用例中的步骤数量')),
                ('isCI', models.IntegerField(db_column='isCI', default=1, verbose_name='是否加入到持续集成  0 不加人  1加入')),
                ('caseLevel', models.IntegerField(db_column='caseLevel', default=100, verbose_name='执行时选择的执行优先级，如果选择了，那么只有同等优先级的case会执行，0高 5中 9低')),
                ('isSendEmail', models.IntegerField(db_column='isSendEmail', default=0, verbose_name='是否发送邮件[是否发送:是否带附件:PASS是否发送:FAIL是否发送:ERROR是否发送:EXCEPTION是否发送]0的时候不发送，1开头的时候依次往后判断即可后面没有的都是1，例如11标识发送带附件所有情况都发送10标识发送不带附件所有情况都发送100标识发送不带附件成功不发送其他情况发送')),
                ('emailList', models.CharField(db_column='emailList', default='', max_length=2000, verbose_name='发送邮件列表，除却执行人execBy以外的其他收件人')),
                ('isCodeRate', models.IntegerField(db_column='isCodeRate', default=0, verbose_name='是否生成代码覆盖率 1生成 0不生成')),
                ('isSaveHistory', models.IntegerField(db_column='isSaveHistory', default=0, verbose_name='是否保存到历史记录 1保存 0不保存')),
                ('execComments', models.CharField(db_column='execComments', max_length=400, verbose_name='执行备注信息')),
                ('retryCount', models.IntegerField(db_column='retryCount', default=0, verbose_name='重试次数，默认0，不重试')),
                ('execType', models.IntegerField(blank=True, db_column='execType', default=1, verbose_name='执行类型，1立即执行 2定时执行 3周期执行')),
                ('execTime', models.DateTimeField(db_column='execTime', default='2000-01-01 00:00:01', verbose_name='执行开始时间，默认当前时间')),
                ('execFinishTime', models.DateTimeField(db_column='execFinishTime', default='2000-01-01 00:00:01', verbose_name='执行结束时间')),
                ('execTakeTime', models.IntegerField(db_column='execTakeTime', default=0, verbose_name='执行耗时')),
                ('execStatus', models.IntegerField(db_column='execStatus', default=1, verbose_name='执行状态: NOTRUN = 1 RUNNING = 2 DONE = 3 EXCEPTION = 4 CANCELING = 10 CANCELED = 11')),
                ('execProgressData', models.CharField(db_column='execProgressData', default='0:0:0:0:0', max_length=30, verbose_name='执行进度数据，格式：ALL:PASS:FAIL:ERROR:NOTRUN，例如任务有10个用例，10:3:1:0:6,代表总共10个，通过3个，失败1个，错误0个，未执行6个。')),
                ('execPlatform', models.IntegerField(db_column='execPlatform', default=1, verbose_name='调用接口的平台，1代表测试平台，2代表jenkins，100代表其他')),
                ('execLevel', models.IntegerField(db_column='execLevel', default=5, verbose_name='优先级 5默认 数字越小优先级越高 范围1-10')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='测试结果 根据断言结果生成的测试结果 PASS/FAIL/ERROR/EXCEPTION/CANCEL')),
                ('testResultMsg', models.TextField(db_column='testResultMsg', verbose_name='任务执行的统计信息,详细统计，json字符串形式保存。')),
                ('testReportUrl', models.CharField(db_column='testReportUrl', max_length=200, verbose_name='测试报告链接')),
                ('taskSuiteExecuteId', models.IntegerField(db_column='taskSuiteExecuteId', default='0', verbose_name='任务集执行Id')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTaskExecuteAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('execBy', models.ForeignKey(blank=True, db_column='execBy', default='', max_length=30, on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTaskExecuteExecBy', to='all_models.TbUser', to_field='loginName', verbose_name='执行人登录用户名')),
                ('httpConfKey', models.ForeignKey(db_column='httpConfKey', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='all_models.TbConfigHttp', to_field='httpConfKey', verbose_name='执行环境的httpConfKey')),
            ],
            options={
                'verbose_name': '912DUBBO任务执行',
                'verbose_name_plural': '912DUBBO任务执行',
                'db_table': 'tb2_dubbo_task_execute',
            },
        ),
        migrations.CreateModel(
            name='Tb2DUBBOTaskSuite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskSuiteId', models.CharField(db_column='taskSuiteId', max_length=25, unique=True, verbose_name='任务ID')),
                ('title', models.CharField(db_column='title', max_length=100, verbose_name='任务集标题')),
                ('taskSuiteDesc', models.CharField(db_column='taskSuiteDesc', max_length=1000, verbose_name='任务集描述')),
                ('protocol', models.CharField(db_column='protocol', max_length=20, verbose_name='任务集协议')),
                ('emailList', models.CharField(db_column='emailList', default='', max_length=2000, verbose_name='发送邮件列表，除却执行人execBy以外的其他收件人')),
                ('status', models.IntegerField(db_column='status', default=2, verbose_name='状态，1新建待审核 2审核通过 3审核未通过')),
                ('taskCount', models.IntegerField(db_column='taskCount', verbose_name='任务集中的任务列表')),
                ('taskList', models.TextField(db_column='taskList', verbose_name='任务集中的任务列表')),
                ('isCI', models.IntegerField(db_column='isCI', default=0, verbose_name='是否加入到持续集成  0 不加人  1加入')),
                ('state', models.IntegerField(db_column='state', default=1, verbose_name='状态 0删除 1有效')),
                ('addBy', models.CharField(db_column='addBy', max_length=25, null=True, verbose_name='创建者登录名')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '任务集',
                'db_table': 'tb2_dubbo_task_suite',
            },
        ),
        migrations.CreateModel(
            name='Tb2DUBBOTaskSuiteExecute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskSuiteId', models.CharField(db_column='taskSuiteId', max_length=25, verbose_name='任务ID')),
                ('title', models.CharField(db_column='title', max_length=100, verbose_name='任务标题')),
                ('taskSuiteDesc', models.CharField(db_column='taskSuiteDesc', max_length=1000, verbose_name='任务描述')),
                ('protocol', models.CharField(db_column='protocol', max_length=20, verbose_name='任务协议')),
                ('status', models.IntegerField(default=2, verbose_name='状态，1新建待审核 2审核通过 3审核未通过')),
                ('taskCount', models.IntegerField(db_column='taskCount', verbose_name='任务集中的任务列表')),
                ('taskList', models.CharField(db_column='taskList', max_length=300, verbose_name='任务集中的任务列表')),
                ('isCI', models.IntegerField(db_column='isCI', default=0, verbose_name='是否加入到持续集成  0 不加人  1加入')),
                ('httpConfKeyList', models.CharField(db_column='httpConfKeyList', max_length=300, verbose_name='任务集包含的执行环境')),
                ('httpConfKeyAliasList', models.CharField(db_column='httpConfKeyAliasList', max_length=300, verbose_name='任务集包含的执行环境名称')),
                ('caseLevel', models.IntegerField(db_column='caseLevel', default=100, verbose_name='执行时选择的执行优先级，如果选择了，那么只有同等优先级的case会执行，0高 5中 9低')),
                ('isSendEmail', models.IntegerField(db_column='isSendEmail', default=0, verbose_name='是否发送邮件[是否发送:是否带附件:PASS是否发送:FAIL是否发送:ERROR是否发送:EXCEPTION是否发送]0的时候不发送，1开头的时候依次往后判断即可后面没有的都是1，例如11标识发送带附件所有情况都发送10标识发送不带附件所有情况都发送100标识发送不带附件成功不发送其他情况发送')),
                ('emailList', models.CharField(db_column='emailList', default='', max_length=2000, verbose_name='发送邮件列表，除却执行人execBy以外的其他收件人')),
                ('isCodeRate', models.IntegerField(db_column='isCodeRate', default=0, verbose_name='是否生成代码覆盖率 1生成 0不生成')),
                ('isSaveHistory', models.IntegerField(db_column='isSaveHistory', default=0, verbose_name='是否保存到历史记录 1保存 0不保存')),
                ('execComments', models.CharField(db_column='execComments', max_length=400, verbose_name='执行备注信息')),
                ('retryCount', models.IntegerField(db_column='retryCount', default=0, verbose_name='重试次数，默认0，不重试')),
                ('execType', models.IntegerField(blank=True, db_column='execType', default=1, verbose_name='执行类型，1立即执行 2定时执行 3周期执行')),
                ('execTime', models.DateTimeField(db_column='execTime', default='2000-01-01 00:00:01', verbose_name='执行开始时间，默认当前时间')),
                ('execFinishTime', models.DateTimeField(db_column='execFinishTime', default='2000-01-01 00:00:01', verbose_name='执行结束时间')),
                ('execTakeTime', models.IntegerField(db_column='execTakeTime', default=0, verbose_name='执行耗时')),
                ('execBy', models.CharField(db_column='execBy', default='', max_length=30, verbose_name='执行人登录用户名')),
                ('execStatus', models.IntegerField(db_column='execStatus', default=1, verbose_name='执行状态: NOTRUN = 1 RUNNING = 2 DONE = 3 EXCEPTION = 4 CANCELING = 10 CANCELED = 11')),
                ('execProgressData', models.CharField(db_column='execProgressData', default='0:0:0:0:0', max_length=30, verbose_name='执行进度数据，格式：ALL:PASS:FAIL:ERROR:NOTRUN，例如任务有10个用例，10:3:1:0:6,代表总共10个，通过3个，失败1个，错误0个，未执行6个。  ')),
                ('execPlatform', models.IntegerField(db_column='execPlatform', default=1, verbose_name='调用接口的平台，1代表测试平台，2代表jenkins，100代表其他')),
                ('execLevel', models.IntegerField(db_column='execLevel', default=5, verbose_name='优先级 5默认 数字越小优先级越高 范围1-10')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='测试结果 根据断言结果生成的测试结果 PASS/FAIL/ERROR/EXCEPTION/CANCEL')),
                ('testResultMsg', models.TextField(db_column='testResultMsg', verbose_name='任务执行的统计信息,详细统计，json字符串形式保存。')),
                ('testReportUrl', models.CharField(db_column='testReportUrl', max_length=200, verbose_name='测试报告链接')),
                ('taskExecuteIdList', models.CharField(db_column='taskExecuteIdList', default='', max_length=200, verbose_name='本次任务执行包含的任务执行Id')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('addBy', models.CharField(db_column='addBy', max_length=25, verbose_name='创建者登录名')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
            ],
            options={
                'db_table': 'tb2_dubbo_task_suite_execute',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTestcase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caseId', models.CharField(db_column='caseId', max_length=25, unique=True, verbose_name='caseId,可以理解为用例ID,格式HTTP_TESTCASE_1 - 99999999递增')),
                ('title', models.CharField(max_length=100, verbose_name='用例标题')),
                ('casedesc', models.TextField(default='', verbose_name='描述')),
                ('caselevel', models.IntegerField(default=5, verbose_name='用例优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('stepCount', models.IntegerField(db_column='stepCount', verbose_name='包含步骤数量')),
                ('status', models.IntegerField(default=2, verbose_name='用例状态，1新建待审核 2审核通过 3审核未通过')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTestcaseAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'db_table': 'tb2_dubbo_testcase',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTestcaseDebug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caseId', models.CharField(db_column='caseId', max_length=25, verbose_name='caseId,可以理解为用例ID,格式HTTP_TESTCASE_1 - 99999999递增')),
                ('title', models.CharField(max_length=100, verbose_name='用例标题')),
                ('casedesc', models.TextField(default='', verbose_name='描述')),
                ('caselevel', models.IntegerField(default=5, verbose_name='用例优先级，数字越小，优先级越高，从0-9。 0高 5中 9低')),
                ('stepCount', models.IntegerField(db_column='stepCount', verbose_name='包含步骤数量')),
                ('status', models.IntegerField(default=2, verbose_name='用例状态，1新建待审核 2审核通过 3审核未通过')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('execStatus', models.IntegerField(db_column='execStatus', default=1, verbose_name='执行状态: NOTRUN = 1 RUNNING = 2 DONE = 3 EXCEPTION = 4')),
                ('assertResult', models.TextField(blank=True, db_column='assertResult', default='', verbose_name='断言结果')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='执行结果')),
                ('beforeExecuteTakeTime', models.IntegerField(db_column='beforeExecuteTakeTime', default=0, verbose_name='执行前耗时')),
                ('afterExecuteTakeTime', models.IntegerField(db_column='afterExecuteTakeTime', default=0, verbose_name='执行后耗时')),
                ('executeTakeTime', models.IntegerField(db_column='executeTakeTime', default=0, verbose_name='执行耗时')),
                ('totalTakeTime', models.IntegerField(db_column='totalTakeTime', default=0, verbose_name='总耗时')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTestcaseDebugAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('httpConfKey', models.ForeignKey(db_column='httpConfKey', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='all_models.TbConfigHttp', to_field='httpConfKey', verbose_name='执行环境的httpConfKey')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'verbose_name': 'DUBBO用例调试',
                'verbose_name_plural': '09DUBBO用例调试',
                'db_table': 'tb2_dubbo_testcase_debug',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTestcaseStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stepNum', models.IntegerField(db_column='stepNum', verbose_name='步骤编号，每个caseID中的有效编号是从1递增')),
                ('title', models.CharField(max_length=100, verbose_name='步骤标题，默认 步骤1，步骤2 等等')),
                ('stepDesc', models.TextField(default='', verbose_name='描述')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('fromInterfaceId', models.CharField(db_column='fromInterfaceId', default='', max_length=30, verbose_name='步骤引用的接口Id')),
                ('isSync', models.IntegerField(choices=[(0, '不同步'), (1, '同步')], default=0, verbose_name='是否同步')),
                ('varsPre', models.TextField(db_column='varsPre', default='', verbose_name='前置变量')),
                ('dubboSystem', models.CharField(db_column='dubboSystem', max_length=100, verbose_name='dubbo的project名称，比如mls-biz-support')),
                ('dubboService', models.CharField(db_column='dubboService', max_length=200, verbose_name='dubbo的service全路径，比如com.lianjia.mls.business.quality.facade.SharePoolHouseFacade')),
                ('dubboMethod', models.CharField(db_column='dubboMethod', max_length=100, verbose_name='dubbo的service中的具体method')),
                ('dubboParams', models.TextField(verbose_name='Dubbo invoke时请求的参数,多个params中间用半角逗号间隔')),
                ('encoding', models.CharField(db_column='encoding', default='gb18030', max_length=10, verbose_name='dubbo的service中的编码方式')),
                ('timeout', models.IntegerField(default=20, verbose_name='超时时间，单位秒')),
                ('varsPost', models.TextField(db_column='varsPost', verbose_name='后置变量')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTestcaseStepAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('caseId', models.ForeignKey(db_column='caseId', max_length=25, on_delete=django.db.models.deletion.CASCADE, to='all_models_for_dubbo.Tb2DubboTestcase', to_field='caseId', verbose_name='Tb2DubboTestcase表中的caseID')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'db_table': 'tb2_dubbo_testcase_step',
            },
        ),
        migrations.CreateModel(
            name='Tb2DubboTestcaseStepDebug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caseId', models.CharField(db_column='caseId', max_length=25, verbose_name='caseId,可以理解为用例ID,格式HTTP_TESTCASE_1 - 99999999递增')),
                ('stepNum', models.IntegerField(db_column='stepNum', verbose_name='步骤编号，每个caseID中的有效编号是从1递增')),
                ('title', models.CharField(max_length=100, verbose_name='步骤标题，默认 步骤1，步骤2 等等')),
                ('stepDesc', models.TextField(default='', verbose_name='描述')),
                ('caseType', models.IntegerField(default=2, verbose_name='用例类型，0测试用例，不计入统计，不进入任务，1 接口计入统计 2接口步骤均计入统计 3步骤计入统计')),
                ('fromInterfaceId', models.CharField(db_column='fromInterfaceId', default='', max_length=30, verbose_name='步骤引用的接口Id')),
                ('isSync', models.IntegerField(choices=[(0, '不同步'), (1, '同步')], default=0, verbose_name='是否同步')),
                ('varsPre', models.TextField(db_column='varsPre', default='', verbose_name='前置变量')),
                ('dubboSystem', models.CharField(db_column='dubboSystem', max_length=100, verbose_name='dubbo的project名称，比如mls-biz-support')),
                ('dubboService', models.CharField(db_column='dubboService', max_length=200, verbose_name='dubbo的service全路径，比如com.lianjia.mls.business.quality.facade.SharePoolHouseFacade')),
                ('dubboMethod', models.CharField(db_column='dubboMethod', max_length=100, verbose_name='dubbo的service中的具体method')),
                ('dubboParams', models.TextField(verbose_name='Dubbo invoke时请求的参数,多个params中间用半角逗号间隔')),
                ('encoding', models.CharField(db_column='encoding', default='gb18030', max_length=10, verbose_name='dubbo的service中的编码方式')),
                ('timeout', models.IntegerField(default=20, verbose_name='超时时间，单位秒')),
                ('varsPost', models.TextField(db_column='varsPost', verbose_name='后置变量')),
                ('execStatus', models.IntegerField(db_column='execStatus', default=1, verbose_name='执行状态')),
                ('actualResult', models.TextField(blank=True, db_column='actualResult', default='', verbose_name='实际结果')),
                ('assertResult', models.TextField(blank=True, db_column='assertResult', default='', verbose_name='断言结果')),
                ('testResult', models.CharField(db_column='testResult', default='NOTRUN', max_length=20, verbose_name='执行结果')),
                ('beforeExecuteTakeTime', models.IntegerField(db_column='beforeExecuteTakeTime', default=0, verbose_name='执行前耗时')),
                ('afterExecuteTakeTime', models.IntegerField(db_column='afterExecuteTakeTime', default=0, verbose_name='执行后耗时')),
                ('executeTakeTime', models.IntegerField(db_column='executeTakeTime', default=0, verbose_name='执行耗时')),
                ('totalTakeTime', models.IntegerField(db_column='totalTakeTime', default=0, verbose_name='总耗时')),
                ('version', models.CharField(db_column='version', default='CurrentVersion', max_length=25, verbose_name='执行的版本')),
                ('state', models.IntegerField(default=1, verbose_name='状态 0删除 1有效')),
                ('modBy', models.CharField(db_column='modBy', max_length=25, null=True, verbose_name='修改者登录名')),
                ('addTime', models.DateTimeField(auto_now_add=True, db_column='addTime', verbose_name='创建时间')),
                ('modTime', models.DateTimeField(auto_now=True, db_column='modTime', verbose_name='修改时间')),
                ('addBy', models.ForeignKey(db_column='addBy', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboTestcaseStepDebugAddBy', to='all_models.TbUser', to_field='loginName', verbose_name='创建者登录名')),
                ('businessLineId', models.ForeignKey(db_column='businessLineId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbBusinessLine', verbose_name='业务线ID')),
                ('httpConfKey', models.ForeignKey(db_column='httpConfKey', max_length=20, on_delete=django.db.models.deletion.CASCADE, to='all_models.TbConfigHttp', to_field='httpConfKey', verbose_name='执行环境的httpConfKey')),
                ('moduleId', models.ForeignKey(db_column='moduleId', on_delete=django.db.models.deletion.CASCADE, to='all_models.TbModules', verbose_name='模块ID')),
            ],
            options={
                'verbose_name': '用例步骤调试',
                'verbose_name_plural': '10用例步骤调试',
                'db_table': 'tb2_dubbo_testcase_step_debug',
            },
        ),
        migrations.AddField(
            model_name='tb2dubbointerfaceexecutehistory',
            name='taskExecuteId',
            field=models.ForeignKey(db_column='taskExecuteId', on_delete=django.db.models.deletion.CASCADE, related_name='Tb2DubboInterfaceExecuteHistoryTaskExecuteId', to='all_models_for_dubbo.Tb2DubboTaskExecute', verbose_name='任务执行表的主键ID，关联哪次执行的任务'),
        ),
        migrations.AlterUniqueTogether(
            name='tb2dubbotestcasestep',
            unique_together=set([('caseId', 'stepNum')]),
        ),
        migrations.AlterUniqueTogether(
            name='tb2dubbointerfaceexecutehistory',
            unique_together=set([('interfaceUrl', 'taskExecuteId')]),
        ),
    ]
