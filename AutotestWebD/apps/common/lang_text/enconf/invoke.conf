[invoke]
retMsg = """<br>Parameters for invoke: <br>[token] NOT NULL: necessary, login the platform and get the token from Token Manage<br>[opt] NOT NULL: necessary, the job you want to do, the opt is in [runtask,runinterface,runtestcase,gettoken].<br>[httpConfKey] NOT NULL: the httpConfKey in platform.<br>[taskId] NOT NULL: the taskId in platform.<br>[interfaceId] NOT NULL: the interfaceId in platform.<br>[caseId] NOT NULL: the testcaseId in platform.<br>[loginName] NOT NULL: the loginname for the platform, is necessary when opt gettoken.<br>[password] NOT NULL: the password for the platform, is necessary when opt gettoken.<br>[isSendEmail] DEFAULT 0: whether send email. 0 means NO, 1 means YES.<br>[emailList]: The receivers except executor, split by [,], a@163.com,b@163.com .<br>[isCodeRate] DEFAULT 0: whether generate code rate[not support yet]. 0 means NO, 1 means YES.<br>[isSaveHistory] DEFAULT 0: whether save the task execute statistics into platform. 0 means NO, 1 means YES.<br>[comments] DEFAULT '': task execute comments info.<br>[execPlatform] DEFAULT 100: the invoke owner. 1 means platform, 2 means jenkins, 100 means other.<br>[timeout] DEFAULT 0: the max waittime for request, 10 means 10 Seconds, 0 means DONOT wait. <br><br>invoke demo: <br>[DEMO FOR gettoken] HTTP://%%s/invoke?opt=gettoken&loginName=wangjiliang&password=123456 <br>[DEMO FOR runtask] HTTP://%%s/invoke?opt=runtask&token=e10adc3949ba59abbe56e057f20f883e&taskId=HTTP_TASK_2&httpConfKey=httpDev01&comments=taskExecuteComments <br>[DEMO FOR runinterface] HTTP://%%s/invoke?opt=runinterface&token=e10adc3949ba59abbe56e057f20f883e&interfaceId=HTTP_INTERFACE_1&httpConfKey=httpDev01 <br>[DEMO FOR runtestcase] HTTP://%%s/invoke?opt=runtestcase&token=e10adc3949ba59abbe56e057f20f883e&caseId=HTTP_TESTCASE_1&httpConfKey=httpDev01 <br>"""  %% (host,host,host,host)
invalidRequestMethod = "Invalid request method[%%s]" %% key
paramNotValid = Param opt is invalid, must be
testLevelNotValid = Param testLevel is invalid, must be
isSendEmailInvalid = Param isSendEmail is invalid, must be 0 ro number start with 1.
saveHistoryInvalid = Param isSaveHistory is invalid, must be 0 or 1.
httpConfKeyCanNotNull = Param httpConfKey can not be null.
httpConfKeyNotExist = Param httpConfKey not exist.
loginnamecannotnull = When opt is gettoken, param loginName cannot be null!
passwordcannotnull = When opt is gettoken, param password cannot be null!
gettokensuccess = Get token successfule!
wrongloginnameandpwd = Wrong loginName or password.
tokencannotnull = Token cannot be null.
novalidloginname = No valid loginName.
wrongtoken = token error!
execplatformerror = "Param execPlatform invalid, must be %%s！" %% str(platformDict.keys())
timeoutparamerror = Param timeout must be a number larger than 0, 0 means no wait.
optparaminvalid = "Param opt is invalid, must be %%s" %% str(rightOptList)

taskidcannotnull = The taskId cannot be null!
packageNotExist = package not exist！
cannotfindtaskinvalidtaskid = Task not found.
createtaskexecutefailure = Tase execute failed, insert to database failed.
taskexecidmustbelagerthan0 = The taskExecuteId must be larger than 0.
taskexecutefinished = Task execute finished.
taskexecuteexception = Exception occurred when task execute!
taskexecutecanceling = Task execute canceling...
taskexecutecanceled = Task execute canceled.
taskexecutetimeout = Timeout when task execute, you can get results by callback urls.
cannotcancelotherusertask = Only can cancel the task you executed!
taskcancelsuccess = Task cancel successful!
tasktobecancelnotfound = Task tobe canceled not found!
taskcancelfailure = Task cancel failure!
cannotcancelfinishedtask = Only can cancel the notrun or running task!
cannotCancelTaskWhenDriverInitialing = Cannot cancel the task when driver is initialing!
taskprogresspromptmsg = Task progress[ALL:PASS:FAIL:ERROR:NOTRUN]:
executetasknotfound = Executed task not found!

notFoundHistoryVersion = Not found history version or current version error!
